version: 2.1

pull_requests_only: &pull_requests_only
  filters:
    branches:
      ignore:
        - main
        - develop

commands:
  determine_workflow_path:
    description: "Determine the workflow path based on git diffs"
    steps:
      - run:
          name: Determine workflow path
          command: |
            if git diff --name-only HEAD^ HEAD | grep -q "backend1/"; then
              echo 'export WORKFLOW_PATH="deploy"' >> $BASH_ENV
            elif git diff --name-only origin/main...$CIRCLE_BRANCH | grep -q "backend1/"; then
              echo 'export WORKFLOW_PATH="use-existing"' >> $BASH_ENV
            else
              echo 'export WORKFLOW_PATH="default-service"' >> $BASH_ENV
            fi

jobs:
  build-and-deploy-preview:
    docker:
      - image: pulumi/pulumi:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Dependencies
          command: |
            npm install
      # - run: 
      #     name: Check for changes in backend since last commit
      #     command: |
      #       if git diff --name-only HEAD^ HEAD | grep -q "backend1/"; then
      #         echo 'export BACKEND_CHANGED=true' >> $BASH_ENV
      #       else
      #         echo 'export BACKEND_CHANGED=false' >> $BASH_ENV
      #       fi
      # - run:
      #     name: Check for initial changes in backend since diverging from main
      #     command: |
      #       if [ "$BACKEND_CHANGED" == "false" ]; then
      #         if git diff --name-only $(git merge-base HEAD origin/main)...HEAD | grep -q "backend1/"; then
      #           echo 'export INITIAL_BACKEND_CHANGED=true' >> $BASH_ENV
      #         else
      #           echo 'export INITIAL_BACKEND_CHANGED=false' >> $BASH_ENV
      #         fi
      #       fi
      - determine_workflow_path
      - run:
          name: Deploy to GCP
          command: |

            echo "$GCP_SERVICE_ACCOUNT_KEY" > /tmp/gcp-service-account-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-service-account-key.json

            # for this non-interactive command to work PULUMI_ACCESS_TOKEN must exist an env var
            pulumi login --non-interactive

            # docker login is needed by Pulumi up when doing new docker.Image()
            cat $GOOGLE_APPLICATION_CREDENTIALS | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev

            pulumi stack select --create shared
            pulumi config set pulumi-tests:branch ${CIRCLE_BRANCH}
            pulumi config set branch ${CIRCLE_BRANCH}
            pulumi up --yes --cwd infra/shared

            pulumi stack select --create ${CIRCLE_BRANCH}

            if [ "$WORKFLOW_PATH" = "deploy" ]; then
              pulumi config set pulumi-tests:branch ${CIRCLE_BRANCH}
              pulumi config set branch ${CIRCLE_BRANCH}
              # pulumi config set commitsha ${CIRCLE_SHA1}
              pulumi up --yes --debug --cwd infra/preview
            elif [ "$WORKFLOW_PATH" = "use-existing" ]; then
              echo "use-existing"
            elif [ "$WORKFLOW_PATH" = "default-service" ]; then
              echo "default-service"
            fi

            # pulumi up --yes --json > pulumi-output.json
            # echo "cat pulumi-output.json"
            # cat pulumi-output.json

  update-on-pr-merge:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: pulumi up --stack production

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-and-deploy-preview:
          <<: *pull_requests_only
      - update-on-pr-merge:
           filters:
            branches:
              only: main
